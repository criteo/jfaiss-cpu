/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.vectorsearch.faiss.swig;

public class BlockInvertedLists extends InvertedLists {
  private transient long swigCPtr;

  protected BlockInvertedLists(long cPtr, boolean cMemoryOwn) {
    super(swigfaissJNI.BlockInvertedLists_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(BlockInvertedLists obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        swigfaissJNI.delete_BlockInvertedLists(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public void setN_per_block(long value) {
    swigfaissJNI.BlockInvertedLists_n_per_block_set(swigCPtr, this, value);
  }

  public long getN_per_block() {
    return swigfaissJNI.BlockInvertedLists_n_per_block_get(swigCPtr, this);
  }

  public void setBlock_size(long value) {
    swigfaissJNI.BlockInvertedLists_block_size_set(swigCPtr, this, value);
  }

  public long getBlock_size() {
    return swigfaissJNI.BlockInvertedLists_block_size_get(swigCPtr, this);
  }

  public void setCodes(SWIGTYPE_p_std__vectorT_faiss__AlignedTableT_uint8_t_32_t_t value) {
    swigfaissJNI.BlockInvertedLists_codes_set(swigCPtr, this, SWIGTYPE_p_std__vectorT_faiss__AlignedTableT_uint8_t_32_t_t.getCPtr(value));
  }

  public SWIGTYPE_p_std__vectorT_faiss__AlignedTableT_uint8_t_32_t_t getCodes() {
    long cPtr = swigfaissJNI.BlockInvertedLists_codes_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_std__vectorT_faiss__AlignedTableT_uint8_t_32_t_t(cPtr, false);
  }

  public void setIds(LongVectorVector value) {
    swigfaissJNI.BlockInvertedLists_ids_set(swigCPtr, this, LongVectorVector.getCPtr(value), value);
  }

  public LongVectorVector getIds() {
    long cPtr = swigfaissJNI.BlockInvertedLists_ids_get(swigCPtr, this);
    return (cPtr == 0) ? null : new LongVectorVector(cPtr, false);
  }

  public BlockInvertedLists(long nlist, long vec_per_block, long block_size) {
    this(swigfaissJNI.new_BlockInvertedLists__SWIG_0(nlist, vec_per_block, block_size), true);
  }

  public BlockInvertedLists() {
    this(swigfaissJNI.new_BlockInvertedLists__SWIG_1(), true);
  }

  public long list_size(long list_no) {
    return swigfaissJNI.BlockInvertedLists_list_size(swigCPtr, this, list_no);
  }

  public SWIGTYPE_p_unsigned_char get_codes(long list_no) {
    long cPtr = swigfaissJNI.BlockInvertedLists_get_codes(swigCPtr, this, list_no);
    return (cPtr == 0) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
  }

  public SWIGTYPE_p_long get_ids(long list_no) {
    long cPtr = swigfaissJNI.BlockInvertedLists_get_ids(swigCPtr, this, list_no);
    return (cPtr == 0) ? null : new SWIGTYPE_p_long(cPtr, false);
  }

  public long add_entries(long list_no, long n_entry, SWIGTYPE_p_long ids, SWIGTYPE_p_unsigned_char code) {
    return swigfaissJNI.BlockInvertedLists_add_entries(swigCPtr, this, list_no, n_entry, SWIGTYPE_p_long.getCPtr(ids), SWIGTYPE_p_unsigned_char.getCPtr(code));
  }

  public void update_entries(long list_no, long offset, long n_entry, SWIGTYPE_p_long ids, SWIGTYPE_p_unsigned_char code) {
    swigfaissJNI.BlockInvertedLists_update_entries(swigCPtr, this, list_no, offset, n_entry, SWIGTYPE_p_long.getCPtr(ids), SWIGTYPE_p_unsigned_char.getCPtr(code));
  }

  public void resize(long list_no, long new_size) {
    swigfaissJNI.BlockInvertedLists_resize(swigCPtr, this, list_no, new_size);
  }

}
