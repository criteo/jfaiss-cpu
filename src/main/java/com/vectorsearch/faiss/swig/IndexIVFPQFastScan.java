/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.vectorsearch.faiss.swig;

public class IndexIVFPQFastScan extends IndexIVF {
  private transient long swigCPtr;

  protected IndexIVFPQFastScan(long cPtr, boolean cMemoryOwn) {
    super(swigfaissJNI.IndexIVFPQFastScan_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(IndexIVFPQFastScan obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        swigfaissJNI.delete_IndexIVFPQFastScan(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public void setBy_residual(boolean value) {
    swigfaissJNI.IndexIVFPQFastScan_by_residual_set(swigCPtr, this, value);
  }

  public boolean getBy_residual() {
    return swigfaissJNI.IndexIVFPQFastScan_by_residual_get(swigCPtr, this);
  }

  public void setPq(ProductQuantizer value) {
    swigfaissJNI.IndexIVFPQFastScan_pq_set(swigCPtr, this, ProductQuantizer.getCPtr(value), value);
  }

  public ProductQuantizer getPq() {
    long cPtr = swigfaissJNI.IndexIVFPQFastScan_pq_get(swigCPtr, this);
    return (cPtr == 0) ? null : new ProductQuantizer(cPtr, false);
  }

  public void setBbs(int value) {
    swigfaissJNI.IndexIVFPQFastScan_bbs_set(swigCPtr, this, value);
  }

  public int getBbs() {
    return swigfaissJNI.IndexIVFPQFastScan_bbs_get(swigCPtr, this);
  }

  public void setM2(long value) {
    swigfaissJNI.IndexIVFPQFastScan_M2_set(swigCPtr, this, value);
  }

  public long getM2() {
    return swigfaissJNI.IndexIVFPQFastScan_M2_get(swigCPtr, this);
  }

  public void setUse_precomputed_table(int value) {
    swigfaissJNI.IndexIVFPQFastScan_use_precomputed_table_set(swigCPtr, this, value);
  }

  public int getUse_precomputed_table() {
    return swigfaissJNI.IndexIVFPQFastScan_use_precomputed_table_get(swigCPtr, this);
  }

  public void setPrecomputed_table(AlignedTableFloat32 value) {
    swigfaissJNI.IndexIVFPQFastScan_precomputed_table_set(swigCPtr, this, AlignedTableFloat32.getCPtr(value), value);
  }

  public AlignedTableFloat32 getPrecomputed_table() {
    long cPtr = swigfaissJNI.IndexIVFPQFastScan_precomputed_table_get(swigCPtr, this);
    return (cPtr == 0) ? null : new AlignedTableFloat32(cPtr, false);
  }

  public void setImplem(int value) {
    swigfaissJNI.IndexIVFPQFastScan_implem_set(swigCPtr, this, value);
  }

  public int getImplem() {
    return swigfaissJNI.IndexIVFPQFastScan_implem_get(swigCPtr, this);
  }

  public void setSkip(int value) {
    swigfaissJNI.IndexIVFPQFastScan_skip_set(swigCPtr, this, value);
  }

  public int getSkip() {
    return swigfaissJNI.IndexIVFPQFastScan_skip_get(swigCPtr, this);
  }

  public void setQbs(int value) {
    swigfaissJNI.IndexIVFPQFastScan_qbs_set(swigCPtr, this, value);
  }

  public int getQbs() {
    return swigfaissJNI.IndexIVFPQFastScan_qbs_get(swigCPtr, this);
  }

  public void setQbs2(long value) {
    swigfaissJNI.IndexIVFPQFastScan_qbs2_set(swigCPtr, this, value);
  }

  public long getQbs2() {
    return swigfaissJNI.IndexIVFPQFastScan_qbs2_get(swigCPtr, this);
  }

  public IndexIVFPQFastScan(Index quantizer, long d, long nlist, long M, long nbits_per_idx, MetricType metric, int bbs) {
    this(swigfaissJNI.new_IndexIVFPQFastScan__SWIG_0(Index.getCPtr(quantizer), quantizer, d, nlist, M, nbits_per_idx, metric.swigValue(), bbs), true);
  }

  public IndexIVFPQFastScan(Index quantizer, long d, long nlist, long M, long nbits_per_idx, MetricType metric) {
    this(swigfaissJNI.new_IndexIVFPQFastScan__SWIG_1(Index.getCPtr(quantizer), quantizer, d, nlist, M, nbits_per_idx, metric.swigValue()), true);
  }

  public IndexIVFPQFastScan(Index quantizer, long d, long nlist, long M, long nbits_per_idx) {
    this(swigfaissJNI.new_IndexIVFPQFastScan__SWIG_2(Index.getCPtr(quantizer), quantizer, d, nlist, M, nbits_per_idx), true);
  }

  public IndexIVFPQFastScan() {
    this(swigfaissJNI.new_IndexIVFPQFastScan__SWIG_3(), true);
  }

  public IndexIVFPQFastScan(IndexIVFPQ orig, int bbs) {
    this(swigfaissJNI.new_IndexIVFPQFastScan__SWIG_4(IndexIVFPQ.getCPtr(orig), orig, bbs), true);
  }

  public IndexIVFPQFastScan(IndexIVFPQ orig) {
    this(swigfaissJNI.new_IndexIVFPQFastScan__SWIG_5(IndexIVFPQ.getCPtr(orig), orig), true);
  }

  public void setOrig_invlists(InvertedLists value) {
    swigfaissJNI.IndexIVFPQFastScan_orig_invlists_set(swigCPtr, this, InvertedLists.getCPtr(value), value);
  }

  public InvertedLists getOrig_invlists() {
    long cPtr = swigfaissJNI.IndexIVFPQFastScan_orig_invlists_get(swigCPtr, this);
    return (cPtr == 0) ? null : new InvertedLists(cPtr, false);
  }

  public void train_residual(long n, SWIGTYPE_p_float x) {
    swigfaissJNI.IndexIVFPQFastScan_train_residual(swigCPtr, this, n, SWIGTYPE_p_float.getCPtr(x));
  }

  public void precompute_table() {
    swigfaissJNI.IndexIVFPQFastScan_precompute_table(swigCPtr, this);
  }

  public void encode_vectors(long n, SWIGTYPE_p_float x, SWIGTYPE_p_long list_nos, SWIGTYPE_p_unsigned_char codes, boolean include_listno) {
    swigfaissJNI.IndexIVFPQFastScan_encode_vectors__SWIG_0(swigCPtr, this, n, SWIGTYPE_p_float.getCPtr(x), SWIGTYPE_p_long.getCPtr(list_nos), SWIGTYPE_p_unsigned_char.getCPtr(codes), include_listno);
  }

  public void encode_vectors(long n, SWIGTYPE_p_float x, SWIGTYPE_p_long list_nos, SWIGTYPE_p_unsigned_char codes) {
    swigfaissJNI.IndexIVFPQFastScan_encode_vectors__SWIG_1(swigCPtr, this, n, SWIGTYPE_p_float.getCPtr(x), SWIGTYPE_p_long.getCPtr(list_nos), SWIGTYPE_p_unsigned_char.getCPtr(codes));
  }

  public void add_with_ids(long n, SWIGTYPE_p_float x, SWIGTYPE_p_long xids) {
    swigfaissJNI.IndexIVFPQFastScan_add_with_ids(swigCPtr, this, n, SWIGTYPE_p_float.getCPtr(x), SWIGTYPE_p_long.getCPtr(xids));
  }

  public void search(long n, SWIGTYPE_p_float x, long k, SWIGTYPE_p_float distances, SWIGTYPE_p_long labels) {
    swigfaissJNI.IndexIVFPQFastScan_search(swigCPtr, this, n, SWIGTYPE_p_float.getCPtr(x), k, SWIGTYPE_p_float.getCPtr(distances), SWIGTYPE_p_long.getCPtr(labels));
  }

  public void compute_LUT(long n, SWIGTYPE_p_float x, SWIGTYPE_p_long coarse_ids, SWIGTYPE_p_float coarse_dis, AlignedTableFloat32 dis_tables, AlignedTableFloat32 biases) {
    swigfaissJNI.IndexIVFPQFastScan_compute_LUT(swigCPtr, this, n, SWIGTYPE_p_float.getCPtr(x), SWIGTYPE_p_long.getCPtr(coarse_ids), SWIGTYPE_p_float.getCPtr(coarse_dis), AlignedTableFloat32.getCPtr(dis_tables), dis_tables, AlignedTableFloat32.getCPtr(biases), biases);
  }

  public void compute_LUT_uint8(long n, SWIGTYPE_p_float x, SWIGTYPE_p_long coarse_ids, SWIGTYPE_p_float coarse_dis, AlignedTableUint8 dis_tables, AlignedTableUint16 biases, SWIGTYPE_p_float normalizers) {
    swigfaissJNI.IndexIVFPQFastScan_compute_LUT_uint8(swigCPtr, this, n, SWIGTYPE_p_float.getCPtr(x), SWIGTYPE_p_long.getCPtr(coarse_ids), SWIGTYPE_p_float.getCPtr(coarse_dis), AlignedTableUint8.getCPtr(dis_tables), dis_tables, AlignedTableUint16.getCPtr(biases), biases, SWIGTYPE_p_float.getCPtr(normalizers));
  }

}
